/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal) {
  Drupal.theme.progressBar = function (id) {
    return '<div id="' + id + '" class="progress" aria-live="polite">' + '<div class="progress__label">&nbsp;</div>' + '<div class="progress__track"><div class="progress__bar"></div></div>' + '<div class="progress__percentage"></div>' + '<div class="progress__description">&nbsp;</div>' + '</div>';
  };

  Drupal.ProgressBar = function (id, updateCallback, method, errorCallback) {
    this.id = id;
    this.method = method || 'GET';
    this.updateCallback = updateCallback;
    this.errorCallback = errorCallback;

    this.element = $(Drupal.theme('progressBar', id));
  };

  $.extend(Drupal.ProgressBar.prototype, {
    setProgress: function setProgress(percentage, message, label) {
      if (percentage >= 0 && percentage <= 100) {
        $(this.element).find('div.progress__bar').css('width', percentage + '%');
        $(this.element).find('div.progress__percentage').html(percentage + '%');
      }
      $('div.progress__description', this.element).html(message);
      $('div.progress__label', this.element).html(label);
      if (this.updateCallback) {
        this.updateCallback(percentage, message, this);
      }
    },
    startMonitoring: function startMonitoring(uri, delay) {
      this.delay = delay;
      this.uri = uri;
      this.sendPing();
    },
    stopMonitoring: function stopMonitoring() {
      clearTimeout(this.timer);

      this.uri = null;
    },
    sendPing: function sendPing() {
      if (this.timer) {
        clearTimeout(this.timer);
      }
      if (this.uri) {
        var pb = this;

        var uri = this.uri;
        if (uri.indexOf('?') === -1) {
          uri += '?';
        } else {
          uri += '&';
        }
        uri += '_format=json';
        $.ajax({
          type: this.method,
          url: uri,
          data: '',
          dataType: 'json',
          success: function success(progress) {
            if (progress.status === 0) {
              pb.displayError(progress.data);
              return;
            }

            pb.setProgress(progress.percentage, progress.message, progress.label);

            pb.timer = setTimeout(function () {
              pb.sendPing();
            }, pb.delay);
          },
          error: function error(xmlhttp) {
            var e = new Drupal.AjaxError(xmlhttp, pb.uri);
            pb.displayError('<pre>' + e.message + '</pre>');
          }
        });
      }
    },
    displayError: function displayError(string) {
      var error = $('<div class="messages messages--error"></div>').html(string);
      $(this.element).before(error).hide();

      if (this.errorCallback) {
        this.errorCallback(this);
      }
    }
  });
})(jQuery, Drupal);;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function (Drupal) {
  Drupal.behaviors.responsiveImageAJAX = {
    attach: function attach() {
      if (window.picturefill) {
        window.picturefill();
      }
    }
  };
})(Drupal);;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

(function ($, window, Drupal, drupalSettings) {
  Drupal.behaviors.AJAX = {
    attach: function attach(context, settings) {
      function loadAjaxBehavior(base) {
        var elementSettings = settings.ajax[base];
        if (typeof elementSettings.selector === 'undefined') {
          elementSettings.selector = '#' + base;
        }
        $(elementSettings.selector).once('drupal-ajax').each(function () {
          elementSettings.element = this;
          elementSettings.base = base;
          Drupal.ajax(elementSettings);
        });
      }

      Object.keys(settings.ajax || {}).forEach(function (base) {
        return loadAjaxBehavior(base);
      });

      Drupal.ajax.bindAjaxLinks(document.body);

      $('.use-ajax-submit').once('ajax').each(function () {
        var elementSettings = {};

        elementSettings.url = $(this.form).attr('action');

        elementSettings.setClick = true;

        elementSettings.event = 'click';

        elementSettings.progress = { type: 'throbber' };
        elementSettings.base = $(this).attr('id');
        elementSettings.element = this;

        Drupal.ajax(elementSettings);
      });
    },
    detach: function detach(context, settings, trigger) {
      if (trigger === 'unload') {
        Drupal.ajax.expired().forEach(function (instance) {
          Drupal.ajax.instances[instance.instanceIndex] = null;
        });
      }
    }
  };

  Drupal.AjaxError = function (xmlhttp, uri, customMessage) {
    var statusCode = void 0;
    var statusText = void 0;
    var responseText = void 0;
    if (xmlhttp.status) {
      statusCode = '\n' + Drupal.t('An AJAX HTTP error occurred.') + '\n' + Drupal.t('HTTP Result Code: !status', { '!status': xmlhttp.status });
    } else {
      statusCode = '\n' + Drupal.t('An AJAX HTTP request terminated abnormally.');
    }
    statusCode += '\n' + Drupal.t('Debugging information follows.');
    var pathText = '\n' + Drupal.t('Path: !uri', { '!uri': uri });
    statusText = '';

    try {
      statusText = '\n' + Drupal.t('StatusText: !statusText', {
        '!statusText': $.trim(xmlhttp.statusText)
      });
    } catch (e) {}

    responseText = '';

    try {
      responseText = '\n' + Drupal.t('ResponseText: !responseText', {
        '!responseText': $.trim(xmlhttp.responseText)
      });
    } catch (e) {}

    responseText = responseText.replace(/<("[^"]*"|'[^']*'|[^'">])*>/gi, '');
    responseText = responseText.replace(/[\n]+\s+/g, '\n');

    var readyStateText = xmlhttp.status === 0 ? '\n' + Drupal.t('ReadyState: !readyState', {
      '!readyState': xmlhttp.readyState
    }) : '';

    customMessage = customMessage ? '\n' + Drupal.t('CustomMessage: !customMessage', {
      '!customMessage': customMessage
    }) : '';

    this.message = statusCode + pathText + statusText + customMessage + responseText + readyStateText;

    this.name = 'AjaxError';
  };

  Drupal.AjaxError.prototype = new Error();
  Drupal.AjaxError.prototype.constructor = Drupal.AjaxError;

  Drupal.ajax = function (settings) {
    if (arguments.length !== 1) {
      throw new Error('Drupal.ajax() function must be called with one configuration object only');
    }

    var base = settings.base || false;
    var element = settings.element || false;
    delete settings.base;
    delete settings.element;

    if (!settings.progress && !element) {
      settings.progress = false;
    }

    var ajax = new Drupal.Ajax(base, element, settings);
    ajax.instanceIndex = Drupal.ajax.instances.length;
    Drupal.ajax.instances.push(ajax);

    return ajax;
  };

  Drupal.ajax.instances = [];

  Drupal.ajax.expired = function () {
    return Drupal.ajax.instances.filter(function (instance) {
      return instance && instance.element !== false && !document.body.contains(instance.element);
    });
  };

  Drupal.ajax.bindAjaxLinks = function (element) {
    $(element).find('.use-ajax').once('ajax').each(function (i, ajaxLink) {
      var $linkElement = $(ajaxLink);

      var elementSettings = {
        progress: { type: 'throbber' },
        dialogType: $linkElement.data('dialog-type'),
        dialog: $linkElement.data('dialog-options'),
        dialogRenderer: $linkElement.data('dialog-renderer'),
        base: $linkElement.attr('id'),
        element: ajaxLink
      };
      var href = $linkElement.attr('href');

      if (href) {
        elementSettings.url = href;
        elementSettings.event = 'click';
      }
      Drupal.ajax(elementSettings);
    });
  };

  Drupal.Ajax = function (base, element, elementSettings) {
    var defaults = {
      event: element ? 'mousedown' : null,
      keypress: true,
      selector: base ? '#' + base : null,
      effect: 'none',
      speed: 'none',
      method: 'replaceWith',
      progress: {
        type: 'throbber',
        message: Drupal.t('Please wait...')
      },
      submit: {
        js: true
      }
    };

    $.extend(this, defaults, elementSettings);

    this.commands = new Drupal.AjaxCommands();

    this.instanceIndex = false;

    if (this.wrapper) {
      this.wrapper = '#' + this.wrapper;
    }

    this.element = element;

    this.element_settings = elementSettings;

    this.elementSettings = elementSettings;

    if (this.element && this.element.form) {
      this.$form = $(this.element.form);
    }

    if (!this.url) {
      var $element = $(this.element);
      if ($element.is('a')) {
        this.url = $element.attr('href');
      } else if (this.element && element.form) {
        this.url = this.$form.attr('action');
      }
    }

    var originalUrl = this.url;

    this.url = this.url.replace(/\/nojs(\/|$|\?|#)/, '/ajax$1');

    if (drupalSettings.ajaxTrustedUrl[originalUrl]) {
      drupalSettings.ajaxTrustedUrl[this.url] = true;
    }

    var ajax = this;

    ajax.options = {
      url: ajax.url,
      data: ajax.submit,
      beforeSerialize: function beforeSerialize(elementSettings, options) {
        return ajax.beforeSerialize(elementSettings, options);
      },
      beforeSubmit: function beforeSubmit(formValues, elementSettings, options) {
        ajax.ajaxing = true;
        return ajax.beforeSubmit(formValues, elementSettings, options);
      },
      beforeSend: function beforeSend(xmlhttprequest, options) {
        ajax.ajaxing = true;
        return ajax.beforeSend(xmlhttprequest, options);
      },
      success: function success(response, status, xmlhttprequest) {
        if (typeof response === 'string') {
          response = $.parseJSON(response);
        }

        if (response !== null && !drupalSettings.ajaxTrustedUrl[ajax.url]) {
          if (xmlhttprequest.getResponseHeader('X-Drupal-Ajax-Token') !== '1') {
            var customMessage = Drupal.t('The response failed verification so will not be processed.');
            return ajax.error(xmlhttprequest, ajax.url, customMessage);
          }
        }

        return ajax.success(response, status);
      },
      complete: function complete(xmlhttprequest, status) {
        ajax.ajaxing = false;
        if (status === 'error' || status === 'parsererror') {
          return ajax.error(xmlhttprequest, ajax.url);
        }
      },

      dataType: 'json',
      type: 'POST'
    };

    if (elementSettings.dialog) {
      ajax.options.data.dialogOptions = elementSettings.dialog;
    }

    if (ajax.options.url.indexOf('?') === -1) {
      ajax.options.url += '?';
    } else {
      ajax.options.url += '&';
    }

    var wrapper = 'drupal_' + (elementSettings.dialogType || 'ajax');
    if (elementSettings.dialogRenderer) {
      wrapper += '.' + elementSettings.dialogRenderer;
    }
    ajax.options.url += Drupal.ajax.WRAPPER_FORMAT + '=' + wrapper;

    $(ajax.element).on(elementSettings.event, function (event) {
      if (!drupalSettings.ajaxTrustedUrl[ajax.url] && !Drupal.url.isLocal(ajax.url)) {
        throw new Error(Drupal.t('The callback URL is not local and not trusted: !url', {
          '!url': ajax.url
        }));
      }
      return ajax.eventResponse(this, event);
    });

    if (elementSettings.keypress) {
      $(ajax.element).on('keypress', function (event) {
        return ajax.keypressResponse(this, event);
      });
    }

    if (elementSettings.prevent) {
      $(ajax.element).on(elementSettings.prevent, false);
    }
  };

  Drupal.ajax.WRAPPER_FORMAT = '_wrapper_format';

  Drupal.Ajax.AJAX_REQUEST_PARAMETER = '_drupal_ajax';

  Drupal.Ajax.prototype.execute = function () {
    if (this.ajaxing) {
      return;
    }

    try {
      this.beforeSerialize(this.element, this.options);

      return $.ajax(this.options);
    } catch (e) {
      this.ajaxing = false;
      window.alert('An error occurred while attempting to process ' + this.options.url + ': ' + e.message);

      return $.Deferred().reject();
    }
  };

  Drupal.Ajax.prototype.keypressResponse = function (element, event) {
    var ajax = this;

    if (event.which === 13 || event.which === 32 && element.type !== 'text' && element.type !== 'textarea' && element.type !== 'tel' && element.type !== 'number') {
      event.preventDefault();
      event.stopPropagation();
      $(element).trigger(ajax.elementSettings.event);
    }
  };

  Drupal.Ajax.prototype.eventResponse = function (element, event) {
    event.preventDefault();
    event.stopPropagation();

    var ajax = this;

    if (ajax.ajaxing) {
      return;
    }

    try {
      if (ajax.$form) {
        if (ajax.setClick) {
          element.form.clk = element;
        }

        ajax.$form.ajaxSubmit(ajax.options);
      } else {
        ajax.beforeSerialize(ajax.element, ajax.options);
        $.ajax(ajax.options);
      }
    } catch (e) {
      ajax.ajaxing = false;
      window.alert('An error occurred while attempting to process ' + ajax.options.url + ': ' + e.message);
    }
  };

  Drupal.Ajax.prototype.beforeSerialize = function (element, options) {
    if (this.$form && document.body.contains(this.$form.get(0))) {
      var settings = this.settings || drupalSettings;
      Drupal.detachBehaviors(this.$form.get(0), settings, 'serialize');
    }

    options.data[Drupal.Ajax.AJAX_REQUEST_PARAMETER] = 1;

    var pageState = drupalSettings.ajaxPageState;
    options.data['ajax_page_state[theme]'] = pageState.theme;
    options.data['ajax_page_state[theme_token]'] = pageState.theme_token;
    options.data['ajax_page_state[libraries]'] = pageState.libraries;
  };

  Drupal.Ajax.prototype.beforeSubmit = function (formValues, element, options) {};

  Drupal.Ajax.prototype.beforeSend = function (xmlhttprequest, options) {
    if (this.$form) {
      options.extraData = options.extraData || {};

      options.extraData.ajax_iframe_upload = '1';

      var v = $.fieldValue(this.element);
      if (v !== null) {
        options.extraData[this.element.name] = v;
      }
    }

    $(this.element).prop('disabled', true);

    if (!this.progress || !this.progress.type) {
      return;
    }

    var progressIndicatorMethod = 'setProgressIndicator' + this.progress.type.slice(0, 1).toUpperCase() + this.progress.type.slice(1).toLowerCase();
    if (progressIndicatorMethod in this && typeof this[progressIndicatorMethod] === 'function') {
      this[progressIndicatorMethod].call(this);
    }
  };

  Drupal.theme.ajaxProgressThrobber = function (message) {
    var messageMarkup = typeof message === 'string' ? Drupal.theme('ajaxProgressMessage', message) : '';
    var throbber = '<div class="throbber">&nbsp;</div>';

    return '<div class="ajax-progress ajax-progress-throbber">' + throbber + messageMarkup + '</div>';
  };

  Drupal.theme.ajaxProgressIndicatorFullscreen = function () {
    return '<div class="ajax-progress ajax-progress-fullscreen">&nbsp;</div>';
  };

  Drupal.theme.ajaxProgressMessage = function (message) {
    return '<div class="message">' + message + '</div>';
  };

  Drupal.Ajax.prototype.setProgressIndicatorBar = function () {
    var progressBar = new Drupal.ProgressBar('ajax-progress-' + this.element.id, $.noop, this.progress.method, $.noop);
    if (this.progress.message) {
      progressBar.setProgress(-1, this.progress.message);
    }
    if (this.progress.url) {
      progressBar.startMonitoring(this.progress.url, this.progress.interval || 1500);
    }
    this.progress.element = $(progressBar.element).addClass('ajax-progress ajax-progress-bar');
    this.progress.object = progressBar;
    $(this.element).after(this.progress.element);
  };

  Drupal.Ajax.prototype.setProgressIndicatorThrobber = function () {
    this.progress.element = $(Drupal.theme('ajaxProgressThrobber', this.progress.message));
    $(this.element).after(this.progress.element);
  };

  Drupal.Ajax.prototype.setProgressIndicatorFullscreen = function () {
    this.progress.element = $(Drupal.theme('ajaxProgressIndicatorFullscreen'));
    $('body').after(this.progress.element);
  };

  Drupal.Ajax.prototype.success = function (response, status) {
    var _this = this;

    if (this.progress.element) {
      $(this.progress.element).remove();
    }
    if (this.progress.object) {
      this.progress.object.stopMonitoring();
    }
    $(this.element).prop('disabled', false);

    var elementParents = $(this.element).parents('[data-drupal-selector]').addBack().toArray();

    var focusChanged = false;
    Object.keys(response || {}).forEach(function (i) {
      if (response[i].command && _this.commands[response[i].command]) {
        _this.commands[response[i].command](_this, response[i], status);
        if (response[i].command === 'invoke' && response[i].method === 'focus') {
          focusChanged = true;
        }
      }
    });

    if (!focusChanged && this.element && !$(this.element).data('disable-refocus')) {
      var target = false;

      for (var n = elementParents.length - 1; !target && n >= 0; n--) {
        target = document.querySelector('[data-drupal-selector="' + elementParents[n].getAttribute('data-drupal-selector') + '"]');
      }

      if (target) {
        $(target).trigger('focus');
      }
    }

    if (this.$form && document.body.contains(this.$form.get(0))) {
      var settings = this.settings || drupalSettings;
      Drupal.attachBehaviors(this.$form.get(0), settings);
    }

    this.settings = null;
  };

  Drupal.Ajax.prototype.getEffect = function (response) {
    var type = response.effect || this.effect;
    var speed = response.speed || this.speed;

    var effect = {};
    if (type === 'none') {
      effect.showEffect = 'show';
      effect.hideEffect = 'hide';
      effect.showSpeed = '';
    } else if (type === 'fade') {
      effect.showEffect = 'fadeIn';
      effect.hideEffect = 'fadeOut';
      effect.showSpeed = speed;
    } else {
      effect.showEffect = type + 'Toggle';
      effect.hideEffect = type + 'Toggle';
      effect.showSpeed = speed;
    }

    return effect;
  };

  Drupal.Ajax.prototype.error = function (xmlhttprequest, uri, customMessage) {
    if (this.progress.element) {
      $(this.progress.element).remove();
    }
    if (this.progress.object) {
      this.progress.object.stopMonitoring();
    }

    $(this.wrapper).show();

    $(this.element).prop('disabled', false);

    if (this.$form && document.body.contains(this.$form.get(0))) {
      var settings = this.settings || drupalSettings;
      Drupal.attachBehaviors(this.$form.get(0), settings);
    }
    throw new Drupal.AjaxError(xmlhttprequest, uri, customMessage);
  };

  Drupal.theme.ajaxWrapperNewContent = function ($newContent, ajax, response) {
    return (response.effect || ajax.effect) !== 'none' && $newContent.filter(function (i) {
      return !($newContent[i].nodeName === '#comment' || $newContent[i].nodeName === '#text' && /^(\s|\n|\r)*$/.test($newContent[i].textContent));
    }).length > 1 ? Drupal.theme('ajaxWrapperMultipleRootElements', $newContent) : $newContent;
  };

  Drupal.theme.ajaxWrapperMultipleRootElements = function ($elements) {
    return $('<div></div>').append($elements);
  };

  Drupal.AjaxCommands = function () {};
  Drupal.AjaxCommands.prototype = {
    insert: function insert(ajax, response) {
      var $wrapper = response.selector ? $(response.selector) : $(ajax.wrapper);
      var method = response.method || ajax.method;
      var effect = ajax.getEffect(response);

      var settings = response.settings || ajax.settings || drupalSettings;

      var $newContent = $($.parseHTML(response.data, document, true));

      $newContent = Drupal.theme('ajaxWrapperNewContent', $newContent, ajax, response);

      switch (method) {
        case 'html':
        case 'replaceWith':
        case 'replaceAll':
        case 'empty':
        case 'remove':
          Drupal.detachBehaviors($wrapper.get(0), settings);
          break;
        default:
          break;
      }

      $wrapper[method]($newContent);

      if (effect.showEffect !== 'show') {
        $newContent.hide();
      }

      var $ajaxNewContent = $newContent.find('.ajax-new-content');
      if ($ajaxNewContent.length) {
        $ajaxNewContent.hide();
        $newContent.show();
        $ajaxNewContent[effect.showEffect](effect.showSpeed);
      } else if (effect.showEffect !== 'show') {
        $newContent[effect.showEffect](effect.showSpeed);
      }

      if ($newContent.parents('html').length) {
        $newContent.each(function (index, element) {
          if (element.nodeType === Node.ELEMENT_NODE) {
            Drupal.attachBehaviors(element, settings);
          }
        });
      }
    },
    remove: function remove(ajax, response, status) {
      var settings = response.settings || ajax.settings || drupalSettings;
      $(response.selector).each(function () {
        Drupal.detachBehaviors(this, settings);
      }).remove();
    },
    changed: function changed(ajax, response, status) {
      var $element = $(response.selector);
      if (!$element.hasClass('ajax-changed')) {
        $element.addClass('ajax-changed');
        if (response.asterisk) {
          $element.find(response.asterisk).append(' <abbr class="ajax-changed" title="' + Drupal.t('Changed') + '">*</abbr> ');
        }
      }
    },
    alert: function alert(ajax, response, status) {
      window.alert(response.text, response.title);
    },
    announce: function announce(ajax, response) {
      if (response.priority) {
        Drupal.announce(response.text, response.priority);
      } else {
        Drupal.announce(response.text);
      }
    },
    redirect: function redirect(ajax, response, status) {
      window.location = response.url;
    },
    css: function css(ajax, response, status) {
      $(response.selector).css(response.argument);
    },
    settings: function settings(ajax, response, status) {
      var ajaxSettings = drupalSettings.ajax;

      if (ajaxSettings) {
        Drupal.ajax.expired().forEach(function (instance) {

          if (instance.selector) {
            var selector = instance.selector.replace('#', '');
            if (selector in ajaxSettings) {
              delete ajaxSettings[selector];
            }
          }
        });
      }

      if (response.merge) {
        $.extend(true, drupalSettings, response.settings);
      } else {
        ajax.settings = response.settings;
      }
    },
    data: function data(ajax, response, status) {
      $(response.selector).data(response.name, response.value);
    },
    invoke: function invoke(ajax, response, status) {
      var $element = $(response.selector);
      $element[response.method].apply($element, _toConsumableArray(response.args));
    },
    restripe: function restripe(ajax, response, status) {
      $(response.selector).find('> tbody > tr:visible, > tr:visible').removeClass('odd even').filter(':even').addClass('odd').end().filter(':odd').addClass('even');
    },
    update_build_id: function update_build_id(ajax, response, status) {
      $('input[name="form_build_id"][value="' + response.old + '"]').val(response.new);
    },
    add_css: function add_css(ajax, response, status) {
      $('head').prepend(response.data);

      var match = void 0;
      var importMatch = /^@import url\("(.*)"\);$/gim;
      if (document.styleSheets[0].addImport && importMatch.test(response.data)) {
        importMatch.lastIndex = 0;
        do {
          match = importMatch.exec(response.data);
          document.styleSheets[0].addImport(match[1]);
        } while (match);
      }
    }
  };
})(jQuery, window, Drupal, drupalSettings);;
(function ($, Drupal) {

  var overlay = $(".l-menu--overlay");
  var overlayContent = $(".l-overlay-content");
  var opacityLayer = $(".body-opacity");
  var siteSearch = $(".site-search");
  var expandedMenu = $(".expanded-menu");
  var header = $("header");

  var openClass = null;
  var closeClass = null;

  function resetOverlay() {
    overlay.fadeOut(300);
    opacityLayer.fadeOut(300);
    overlay.removeClass("open closed");
    initOverlayContent();
  }

  function initOverlayContent() {
    header.removeClass("expanded");
    overlayContent.removeClass("site-search expanded-menu");
    $(".l-search--button i").removeClass("fa-times").addClass("fa-search");
    $(".l-expand--button i").removeClass("fa-times").addClass("fa-bars");
    siteSearch.hide();
    expandedMenu.hide();
  }

  function getOverlayAction() {

    if ($(this).hasClass("fa-times")) {
      resetOverlay();
    } else {
      if ($(this).hasClass("fa-search")) {
        openClass = "site-search";
      } else if ($(this).hasClass("fa-bars")) {
        openClass = "expanded-menu";
      }
      setOverlay(openClass);
    }
  }

  function setOverlay(openClass) {

    if (overlay.hasClass("open")) {
      if (overlayContent.hasClass("site-search") && (openClass !== "site-search")) {
        closeClass = "site-search";
      }
      if (overlayContent.hasClass("expanded-menu") && (openClass !== "expanded-menu")) {
        closeClass = "expanded-menu";
      }
      openOverlayContent(openClass, closeClass);
    } else {
      setTimeout(function () {
        header.addClass("expanded");
        overlay.addClass("open");
      }, 50);

      openOverlayContent(openClass);
      opacityLayer.show();
    }
  }

  function openOverlayContent(openClass) {
    overlay.show();

    overlayContent.addClass(openClass).removeClass(closeClass);
    if (openClass === 'site-search') {
      siteSearch.show();
      expandedMenu.hide();
      $(".l-expand--button i").removeClass("fa-times").addClass("fa-bars");
      $(".l-search--button i").removeClass("fa-search").addClass("fa-times");
      $(".site-search #edit-query").focus();
    } else if (openClass === 'expanded-menu') {
      expandedMenu.show();
      siteSearch.hide();
      $(".l-search--button i").removeClass("fa-times").addClass("fa-search");
      $(".l-expand--button i").removeClass("fa-bars").addClass("fa-times");
    }
  }


  initOverlayContent();
  $(".l-menu--button .far").on("click tap", getOverlayAction);
  opacityLayer.on("click tap", resetOverlay);


})(jQuery, Drupal);
;
(function ($, Drupal) {
	var subMenu = $("ul.menu");
	var menuLink = null;
	var windowWidth = $(window).width();
	var breakpoint = 980;

	function resetMenu(){
		$("ul.sub-menu").removeClass("open").addClass("closed").hide();
		$(".menu-button i").removeClass("fa-minus").addClass("fa-plus");
	}

	function resetDesktopMenu(){
		$("ul.sub-menu").removeClass("open").removeClass("closed").show();
	}

	function toggleMenu(){

		if($( this ).next().hasClass("closed")){
			resetMenu();
			$( this ).next().removeClass("closed").addClass("open").show();
			$( this ).find("i").addClass("fa-minus").removeClass("fa-plus");
		}
		else{
			resetMenu();
		}
	}

	 $(window).on("resize", function(){
	 	windowWidth = $(window).width();
	 	if($(".expanded-menu").length){
	 		if(windowWidth <= breakpoint){
	 			$(".menu-button").on("click tap", toggleMenu);
	 			$(".menu-button").show();
	 			resetMenu();
	 		}
		 	else{
		 		$(".menu-button").hide();
				resetDesktopMenu();
	 		}
	 	}
	 });

	$(window).on("load", function(){
		windowWidth = $(window).width();
	 	if($(".expanded-menu").length){
	 		$(".expanded-menu ul.menu:first > li ul.menu").each(function( ) {
	 			subMenu = $( this );
	 			subMenu.addClass("sub-menu");
	 		});
	 
			$(".expanded-menu ul.menu > li.menu-item--expanded a").not(".expanded-menu ul.menu ul.menu li a").each(function( ){
				menuLink = $( this );
				menuLink.after('<div class="menu-button"><i class="fa fa-plus"></i></div>');
			});
			
	 		if(windowWidth <= breakpoint){
				resetMenu();
				$(".menu-button").on("click tap", toggleMenu);
			}
			else{
				$(".menu-button").off("click tap", toggleMenu);
				$(".menu-button").hide();
				resetDesktopMenu();
			}
		}
	});

 })(jQuery, Drupal);;
(function ($, Drupal) {

  Drupal.behaviors.newsletterSignup = {
    attach: function () {
      $('#cigi-subscribe-form').submit(function () {
        ga('send', 'event', 'Newsletter Registration', 'Click');
      });

      $('#block-cigiworldwidehomepageblock form').submit(function () {
        ga('send', 'event', 'Homepage Newsletter Signup', 'Click');
      });

      $('#block-cigiworldwideblock form').submit(function () {
        ga('send', 'event', 'Footer Newsletter Signup', 'Click');
      });
      $('#cigi-trust-subscribe-form').submit(function () {
        ga('send', 'event', 'Trust Signup', 'Click');
      });
    }
  };

  //set placeholder text for search/email forms
  function setPlaceholderText(formName, searchText) {
    var clearButton = $('<i class="fa fa-times-circle clear-button"></i>');
    clearButton.insertAfter(formName);
    formName.attr('placeholder', searchText);

    formName.focus(function () {
      if (formName.attr('placeholder') === searchText) {
        formName.attr('placeholder', '');
        formName.keydown(function () {
          clearButton.show();
        });
      }
    }).blur(function () {
      if (formName.attr('placeholder') === '') {
        formName.attr('placeholder', searchText);
      }
    });

    clearButton.click(function () {
      formName.val("");
      clearButton.hide();
    });
  }

  if ($('.cigi-newsletter-subscription-form').length > 0) {
    var newsletterForm = $('.cigi-newsletter-subscription-form .form-text');
    var newsletterText = 'Your email';
    setPlaceholderText(newsletterForm, newsletterText);
  }

  //use chosen dropdown for select list on solr exposed search lists\

  $('#block-exposedformsolr-searchpage-1-2 #edit-type option').eq(0).text("Select Content type");
  $('#block-exposedformsolr-searchpage-1-2 #edit-type').removeClass('form-select').addClass('chosen-select');
  $('#block-exposedformsolr-searchpage-1-2 #edit-field-research-areas option').eq(0).text("Select Research Area");
  $('#block-exposedformsolr-searchpage-1-2 #edit-field-research-areas').removeClass('form-select').addClass('chosen-select');

  $('#block-exposedformsolr-searchpage-1 #edit-type option').eq(0).text("Select Content Type");
  $('#block-exposedformsolr-searchpage-1 #edit-type').removeClass('form-select').addClass('chosen-select');
  $('#block-exposedformsolr-searchpage-1 #edit-field-research-areas option').eq(0).text("Select Research Area");
  $('#block-exposedformsolr-searchpage-1 #edit-field-research-areas').removeClass('form-select').addClass('chosen-select');

  $("#edit-publication-type option").eq(0).text("Select Publication Type");
  $("#edit-publication-type").removeClass('form-select').addClass('chosen-select');

  //zoom effect on feature images
  $(".view-features .views-field-view-node").hover(function () {
      $(this).prev().prev().prev().addClass('hover');
    },
    function () {
      $(this).prev().prev().prev().removeClass('hover');
    }
  );

  //Updates to right-menu, right-sidebar and main content
  if ($(".l-right-menu").text().trim().length === 0 && $(".l-right-sidebar").text().trim().length === 0 && $(".l-right-menu img").length === 0) {
    $(".l-right-menu").hide();
    $(".l-right-sidebar").hide();
    $(".l-main-content").removeClass("l-col-8-lg").addClass("l-col-12-lg");
  }

  //focus cursor on input box on seach page
  $(".site-search #views-exposed-form-solr-search-page-1 #edit-search-api-fulltext").focus();
  $(".site-search #views-exposed-form-solr-search-page-1 #edit-search-api-fulltext").val($("#views-exposed-form-solr-search-page-1 #edit-search-api-fulltext").val());

  //search facets minimizing on mobile
  if (!$(".desktop-menu").is(":visible")) {
    $('.block-facets').addClass("js-enabled");
    $('.block-facets').addClass("closed");
    $('.block-facets .item-list__links').hide(); //show elements as hidden
    $('.block-facets .heading-wrapper h2').prepend("Filter by: ");

    $('.block-facets .heading-wrapper').click(function () {
      $(this).parent().find(".item-list__links").fadeToggle();
      $(this).parent().toggleClass("closed");
    });
  }

  //sidebar menu minimizing on mobile
  if (!$(".desktop-menu").is(":visible")) {
    $('.region-right-menu .block-menu').addClass("js-enabled");
    $('.region-right-menu .block-menu').addClass("closed");
    $('.region-right-menu .block-menu .menu').hide(); //show elements as hidden

    if ($('.region-right-menu .block-menu h2 img').length === 0) {
      $('.region-right-menu .block-menu h2').prepend("Menu: ");
    }

    $('.region-right-menu > .block-menu h2').click(function () {
      $(this).parent().find(".menu").fadeToggle();
      $(this).parent().toggleClass("closed");
    });
  }

  var counter = 0;

  $(".rocket").click(function () {
    counter++;

    if (counter >= 5) {
      $(this).addClass("clicked");
      setTimeout(function () {
        $(".rocket").removeClass("clicked");
        counter = 0;
      }, 2500);
    }
  });


  $('.view-videos.view-display-id-attachment_1 .views-field-field-video').hover(function () {
    $(this).toggleClass("hover");
    $('.view-videos.view-display-id-attachment_1 .overlay').fadeToggle(200);

  });

  //tabs region dynamic creation
  function buildtabs() {
    if ((".region-tabbed-content > div").length) {
      var list = $(".region-tabbed-content").prepend('<ul id="tabs"></ul>').find('ul').first();

      $(".region-tabbed-content > div").each(function () {
        list.append('<li><a href="#' + $(this).attr("id") + '">' + $(this).find('h2').first().text() + '</a></li>');
        $(this).find('h2').first().hide();
      });

      if (!$("#tabs").children().length) {
        $("#tabs").remove();
      }
    }
  }

  buildtabs();


  $(window).on('hashchange', function () {
    var hash = location.hash;
    //var path = location.pathname;

    if (hash.length === 0) {
      hash = '#' + $(".region-tabbed-content > div").first().attr("id");
    }

    // Iterate over all nav links, setting the "selected" class as-appropriate.
    $('#tabs li').each(function () {
      var that = $(this).find("a").first();
      that[that.attr('href') === hash ? 'addClass' : 'removeClass']('selected');
    });

    $('.region-tabbed-content > div').hide();
    $(hash).fadeIn('slow');

  }).trigger('hashchange'); // bind event to the same selector as event-listener

  //link to tabs from menu on GCIG page
  $(".menu--gcig a").on('click', function () {
    var hash = $(this).attr("href");

    // Iterate over all nav links, setting the "selected" class as-appropriate.
    $('#tabs li').each(function () {
      var that = $(this).find("a").first();
      that[that.attr('href') === hash ? 'addClass' : 'removeClass']('selected');
    });

    $('.region-tabbed-content > div').hide();
    $(hash).show();

    $('html,body').animate({
      scrollTop: $("#tabs").offset().top - 80
    });

  });

  //move pull quote in body
  if ($('.field--name-field-pull-quote').length && $('.field--name-body').length) {
    var numPtags = $('.field--name-body').find("p").length;
    //move pull quote to 1/2 way into the body, rounded down so its closer to the top.
    var quotePosition = Math.max(0, Math.floor(numPtags / 2) - 1);
    $(".field--name-body p:eq( " + quotePosition + " )").before($('.field--name-field-pull-quote'));
  }

  //special treatment for innovation series feature on homepage
  if ($('#block-views-block-innovation-series-block-6 .subtitle').length) {
    $(".subtitle:contains('CIGI')").each(function () {
      var newText = $(this).html().replace("CIGI", "<span>CIGI</span>");
      $(this).html(newText);
    });
  }

  if ($(".overlay-video").length) {
    $(".overlay-play").on('click', function () {
      $(this).fadeOut("fast");
      var image = $(this).parent().find($("img"));
      var video_id = "#" + $(this).parent().find("iframe").attr("id");

      $(video_id).attr("src", $(video_id).attr("src").replace("autoplay=0", "autoplay=1"));
      image.fadeOut(2000);
    });
  }

  // Setting portrait content to be consistent size.
  function setPortraitContentHeight() {
    var max_height = 0;
    // Featured front page section.
    if ($(".portrait-teaser.view-features .portrait-content").length) {
      max_height = 0;
      $('.portrait-teaser.view-features .portrait-content').each(function () {
        if ($(this).outerHeight() > max_height) {
          max_height = $(this).outerHeight();
        }
      });
      $('.portrait-teaser.view-features .portrait-content').css('height', max_height + 'px');
    }

    // Publications front page section.
    if ($(".portrait-teaser.view-publications .portrait-content").length) {
      max_height = 0;
      $('.portrait-teaser.view-publications .portrait-content').each(function () {
        if ($(this).outerHeight() > max_height) {
          max_height = $(this).outerHeight();
        }
      });
      $('.portrait-teaser.view-publications .portrait-content').css('height', max_height + 'px');
    }

    // Featured opinions on opinions page.
    if ($(".portrait-teaser.view-opinions .portrait-content").length) {
      max_height = 0;
      $('.portrait-teaser.view-opinions .portrait-content').each(function () {
        if ($(this).outerHeight() > max_height) {
          max_height = $(this).outerHeight();
        }
      });
      $('.portrait-teaser.view-opinions .portrait-content').css('height', max_height + 'px');
    }
  }

  /**
   * Make the featured items all have the same height.
   */
  function setFeaturedSubjectsHeight() {

    var max_height = 0;
    // Featured subjects on research page.
    const featured_subjects = $('.featured-subjects');
    if (featured_subjects.length) {
      featured_subjects.find('.subject-container').height('auto');
      featured_subjects.find('.subject-container').each(function () {
        if ($(this).height() > max_height) {
          max_height = $(this).height();
        }
      });
      featured_subjects.find('.subject-container').height(max_height);
    }
  }

  /**
   * Make the featured items all have the same height.
   */
  function setFeaturedExpertsHeight() {

    var max_height = 0;
    // Featured experts on home page.
    const featured_experts = $('.node--type-person.node--view-mode-expert-teaser');
    if (featured_experts.length) {
      featured_experts.find('.field--name-field-short-bio').height('auto');
      featured_experts.find('.field--name-field-short-bio').each(function () {
        if ($(this).height() > max_height) {
          max_height = $(this).height();
        }
      });
      featured_experts.find('.field--name-field-short-bio').height(max_height);
    }
  }

  $(window).on("load", function () {
    //twitter
    window.twttr = (function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0],
        t = window.twttr || {};
      if (d.getElementById(id)) return t;
      js = d.createElement(s);
      js.id = id;
      js.src = "https://platform.twitter.com/widgets.js";
      fjs.parentNode.insertBefore(js, fjs);
    
      t._e = [];
      t.ready = function(f) {
        t._e.push(f);
      };
    
      return t;
    }(document, "script", "twitter-wjs"));

    //facebook
    (function (d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) {
        return;
      }
      js = d.createElement(s);
      js.id = id;
      js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=995454813805233";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));


    $(".facebook-share-link").click(function () {
      var href = $(this).data('url');
      FB.ui(
        {
          method: 'share',
          href: href
        }, function (response) {
        });
    });

    var windowWidth = $(window).width();
    if (windowWidth >= 768) {
      setPortraitContentHeight();
    }

    setFeaturedSubjectsHeight();
    // setFeaturedExpertsHeight();


    $(".accordion-title").click(function () {
      $(this).toggleClass('expanded');
      $(this).next('.accordion-content').toggle();
    });
  });

  $(window).on("resize", function () {
    var windowWidth = $(window).width();
    if (windowWidth >= 768) {
      setPortraitContentHeight();
    } else {
      $('.portrait-teaser.view-features .portrait-content').removeAttr("style");
      $('.portrait-teaser.view-publications .portrait-content').removeAttr("style");
      $('.portrait-teaser.view-opinions .portrait-content').removeAttr("style");
    }

    setFeaturedSubjectsHeight();
    // setFeaturedExpertsHeight();
  });


  // Select all links with hashes
  $('a[href*="#"]')
  // Remove links that don't actually link to anything
    .not('[href="#"]')
    .not('[href="#0"]')
    .click(function (event) {
      // On-page links
      if (
        location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '')
        && location.hostname == this.hostname
      ) {
        // Figure out element to scroll to
        var target = $(this.hash);
        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
        // Does a scroll target exist, and not within a tabbed region?
        if (target.length && !$(this).closest("#tabs")) {
          // Only prevent default if animation is actually gonna happen
          event.preventDefault();
          $('html, body').animate({
            scrollTop: target.offset().top
          }, 1000, function () {
            // Callback after animation
            // Must change focus!
            var $target = $(target);
            $target.focus();
            if ($target.is(":focus")) { // Checking if the target was focused
              return false;
            } else {
              $target.attr('tabindex', '-1'); // Adding tabindex for elements not focusable
              $target.focus(); // Set focus again
            }
          });
        }
      }
    });

  // Add back to top button if #top anchor is on page
  if ($("#top").length) {
    $("<div id='backtotop'><a href='#top'><i class='fa fa-chevron-up'></i></a></div>").appendTo("#block-mainpagecontent");

    function isScrolledIntoView(elem) {
      var docViewTop = $(window).scrollTop();
      var docViewBottom = docViewTop + $(window).height();
      var elemTop = $(elem).offset().top;
      return ((elemTop <= docViewBottom));
    }

    $(document).scroll(function () {
      var y = $(this).scrollTop();
      if (y > 800 && !isScrolledIntoView($("footer"))) {
        $('#backtotop').fadeIn();
      } else {
        $('#backtotop').fadeOut();
      }
    });
  }

  //See /modules/contrib/better_exposed_filters/js/auto_submit.js
  Drupal.behaviors.cigiAutoSubmit = {
    attach: function (context) {
      var selectors = '.views-exposed-form select';

      function triggerSubmit($target) {
        $target.closest('form').find('.form-submit').click();
      }

      $(selectors, context).addBack(selectors).on('change', function (e) {
        var $target = $(e.target);
        if ($('#views-exposed-form-solr-search-page-1').length) {
          $('body').append("<div class='ajax-progress-fullscreen' id='ajaxSpinner'></div>");
        }
        triggerSubmit($target);

      });
    }
  };

})(jQuery, Drupal);
;
(function ($, Drupal) {

    var moreButton = $(".read-more");
    var overlay = $(".overlay");
    var fullContent= $(".partial-content .content");
    var contentHolder = $(".partial-content");

    var fullHeight;
    var overlayHeight;

    //due to safari, we need to set the height after the page loads
    $(window).on('load', function() {
        fullHeight = fullContent.height();
        overlayHeight = overlay.height();

        if(fullHeight > overlayHeight){
            overlay.show();
        }
        else{
            overlay.hide();
        }
    });

    moreButton.click(function(){
        if(overlay.is(":visible")){
            overlay.hide();
            contentHolder.animate({height: fullHeight}, 500, 'linear', function(){
                $(this).height('auto');
            });
            moreButton.find("i").removeClass("fa-plus").addClass("fa-minus");
            moreButton.addClass("open");
        }
        else{
            contentHolder.animate({height:overlayHeight}, 500, 'linear', function(){
                overlay.show();
            });
            moreButton.find("i").removeClass("fa-minus").addClass("fa-plus");
            moreButton.removeClass("open");
        }

    });

    
})(jQuery, Drupal);;
/**
 * @file
 * ar-redirect.js
 *
 * This is used to show the "Return to CIGI [Annual Report] 2017" button.
 */

(function ($, Drupal) {

    Drupal.behaviors.ARRedirect = {
        attach: function () {

            function fromAR() {
                if (~(window.location.href).indexOf('source=ar')) {
                    return true;
                }
            }

            $(window).on('load', function () {
                if (fromAR()) {
                    const annualReportButton = $('#annual-report-button');
                    annualReportButton.click(function () {
                        window.history.back();
                        return false;
                    });
                    annualReportButton.css({'width': '90px', 'height': '90px', 'display': 'flex'});
                }
            });
        }
    };
})(jQuery, Drupal);
;
(function ($, Drupal) {

  $(window).on("load", function () {
    setTimeout(function () {
      var winHeight = $(window).height(),
        docHeight = $(document).height(),
        progressBarContainer = $('.progress-bar'),
        progressBar = $('progress'),
        max, value;

      max = docHeight - winHeight;
      progressBar.attr('max', max);

      if ($('.no-border a').length) {
        // Add the mobile chapter menu
        var mobileMenuContainer = $(document.createElement('div'))
        mobileMenuContainer.addClass('mobile-menu-container');
        var mobileMenu = $(document.createElement('div'));
        mobileMenu.addClass('mobile-menu');
        var mobileMenuTitle = $(document.createElement('div'));
        mobileMenuTitle.addClass('mobile-menu-title');
        mobileMenuTitle.html($('.series-title').html());
        mobileMenu.append(mobileMenuTitle);
        var mobileMenuList = $(document.createElement('ul'));
        mobileMenuList.addClass('mobile-menu-list');
        mobileMenu.append(mobileMenuList);
        mobileMenuContainer.append(mobileMenu);
        $('.longform-2').append(mobileMenuContainer);

        // The button to display the mobile chapter menu
        var mobileMenuButton = $(document.createElement('div'));
        mobileMenuButton.addClass('mobile-menu-button');
        mobileMenuButton.html('<i class="fa fa-list-ul fa-2"></i>');
        mobileMenuButton.click(function () {
          if ($('.mobile-menu-container').css('bottom') === '0px') {
            $(this).html('<i class="fa fa-list-ul fa-2"></i>');
            $('.mobile-menu-container').animate({
              'bottom': '-100%',
            }, 500);
          } else {
            $(this).html('<i class="fa fa-times fa-2"></i>');
            $('.mobile-menu-container').animate({
              'bottom': '0',
            }, 500);
          }
          return false;
        });
        $('.longform-2').append(mobileMenuButton);

        // Loop through all anchors, adding both the tooltips to the
        // progress bar and the mobile chapter menu items.
        $('.no-border a').each(function (ind) {
          var chapterId = $(this).attr('id');
          if (chapterId && max > 0) {
            var label = (ind + 1) + '. ' + $(this).html();

            // Progress bar anchor
            var top = parseInt($(this).offset().top, 10) - 80;
            var percent = ((top / max) * 100).toFixed(4);
            var chapterAnchor = $(document.createElement('a'));
            chapterAnchor.addClass('chapter-anchor');
            chapterAnchor.attr('href', '#' + chapterId);
            chapterAnchor.attr('id', chapterId + '-chapter-anchor');
            chapterAnchor.css({
              'left': percent + '%',
            });
            chapterAnchor.click(function () {
              $('html,body').animate({
                scrollTop: $('#' + chapterId).offset().top - 80,
              }, 1000);
              return false;
            });

            var tooltip = $(document.createElement('div'));
            tooltip.addClass('chapter-anchor-tooltip');
            tooltip.html(label);
            chapterAnchor.append(tooltip);
            progressBarContainer.append(chapterAnchor);

            // Mobile chapter menu link
            var mobileMenuItem = $(document.createElement('li'));
            var mobileMenuItemLink = $(document.createElement('a'));
            mobileMenuItemLink.html(label);
            mobileMenuItemLink.click(function () {
              $('html,body').animate({
                scrollTop: $('#' + chapterId).offset().top,
              }, 1000);
              $('.mobile-menu-button').html('<i class="fa fa-list-ul fa-2"></i>');
              $('.mobile-menu-container').animate({
                'bottom': '-100%',
              }, 500);
              return false;
            });
            mobileMenuItem.append(mobileMenuItemLink);
            mobileMenuList.append(mobileMenuItem);
          }
        });
      }
    }, 250);

    $(window).on('scroll', function () {
      let scrolled = $(window).scrollTop();
      $('progress').attr('value', scrolled);
      if (scrolled >= 65 && $(window).width() >= 768) {
        $('.article-sticky-header').fadeIn();
        $('.progress-bar').addClass('scrolled');
      } else if (scrolled >= 65) {
        $('.mobile-menu-container,.mobile-menu-button').addClass('scrolled');
      } else {
        $('.progress-bar,.mobile-menu-container,.mobile-menu-button').removeClass('scrolled');
        $('.article-sticky-header').fadeOut();
      }

      if ($('body').hasClass('sticky-header') && scrolled >= 70 && $(window).width() >= 768) {
        $('header').addClass('scrolled');
      } else {
        $('header').removeClass('scrolled');
      }

    });
  });

  $(window).resize(function () {
    // When resizing the window, recalculating the progress bar and
    // chapter anchor values.
    var winHeight = $(window).height(),
      docHeight = $(document).height();

    var max = docHeight - winHeight;
    $('progress').attr('max', max);

    $('.no-border a').each(function () {
      var chapterId = $(this).attr('id');
      if (chapterId && max > 0) {
        var top = parseInt($(this).offset().top, 10) - 80;
        var percent = ((top / max) * 100).toFixed(4);
        $('#' + chapterId + '-chapter-anchor').css({
          'left': percent + '%',
        });
      }
    });
  });

})(jQuery, Drupal);
;
(function ($, Drupal) {

  Drupal.behaviors.customDropdownCreation = {
    attach: function () {

      $('select').once("customDropdownCreation").each(function () {

        var id = $(this).attr('data-drupal-selector');
        // an array containing the drupal selectors of the dropdowns that should be customly styled

        var customDropdownsArray = [
          'edit-research-area',
          'edit-program',
          'edit-research-area-tid',
          'edit-publication-type-tid',
          'edit-research-areas-tid',
          'edit-media-type-tid',
          'edit-event-type',
          'edit-field-category',
          'edit-publication-type-id',
          'edit-content-type-tid',
          'edit-field-subject',
          'edit-subject',
          'edit-subject-tid',
          'edit-field-multimedia-type',
          'edit-program-id',
          'edit-type',
          'edit-content-type-id',
          'edit-media-publication-type-1',
          'edit-field-year',
          'edit-field-type',
        ];


        if ($.inArray(id, customDropdownsArray) !== -1) {
          var $this = $(this);
          var numberOfOptions = $this.children('option').length;
          var selectedOption = $this.children('option:selected').index();
          var $styledSelect;
          var $list;

          $this.wrap('<div class="js-custom-dropdown__wrapper ' + id + '"></div>');
          $this.after('<div class="js-custom-dropdown__element"></div>');
          $this.addClass('hidden');
          $styledSelect = $this.next('div.js-custom-dropdown__element');
          $styledSelect.text($this.children('option').eq(selectedOption).text());
          $list = $('<ul />', {'class': 'js-custom-dropdown__options'}).insertAfter($styledSelect);

          for (var i = 0; i < numberOfOptions; i++) {
            $('<li />', {
              text: $this.children('option').eq(i).text(),
              rel: $this.children('option').eq(i).val()
            }).appendTo($list);
          }

          //hide first one by default so its not choice to start with
          var $selectedIndex = selectedOption;
          var $pastSelectedIndex = $selectedIndex;
          $list.children('li').eq($selectedIndex).hide();

          var $listItems = $list.children('li');

          $styledSelect.click(function (e) {
            e.stopPropagation();
            $('div.js-custom-dropdown__element.active').not(this).each(function () {
              $(this).removeClass('active').next('ul.js-custom-dropdown__options').removeClass('show');
            });
            $(this).toggleClass('active').next('ul.js-custom-dropdown__options').toggleClass('show');
          });

          //Click event for list items in the option drop down
          $listItems.click(function (e) {
            e.stopPropagation();
            $styledSelect.text($(this).text()).removeClass('active');
            $this.val($(this).attr('rel')).change();
            $list.removeClass('show');
            $pastSelectedIndex = $selectedIndex;
            $selectedIndex = $this[0].selectedIndex;
            $list.children('li').eq($selectedIndex).hide();
            $list.children('li').eq($pastSelectedIndex).show();
          });

          $(document).click(function () {
            $styledSelect.removeClass('active');
            $list.removeClass('show');
          });
        }
      });
    }
  }

})(jQuery, Drupal);
;
(function ($, Drupal) {

  Drupal.behaviors.miniCalendar = {
    attach: function () {

      if ($('.calendar-calendar').length) {

        $('.mini-day-on > a').click(function (event) {
          event.preventDefault();

          // Save current clicked state.
          let $isClicked = $(this).hasClass('clicked');

          // Reset all other event links.
          $('.mini-day-on > a').each(function () {
            $(this).removeClass('clicked');
          });

          // Reset current clicked state for toggle.
          if ($isClicked) {
            $(this).addClass('clicked');
          }

          if ($(this).hasClass('clicked')) {
            $(this).removeClass('clicked');
            $(this).next().removeClass('show');
          } else {
            $(this).addClass('clicked');
            $(this).next().addClass('show');
          }
        });

        // If a day has only one event, then clicking on the date will link to the event.
        $('.mini-day-on').click(function () {
          var date = $(this).find('.title');
          var oneDay = date.length === 1;
          if (oneDay) {
            window.location.href = date.find('a').attr('href');
          }
        });

        $('.mini-day-on').on("mouseenter touchstart", function () {
          $('.events').removeClass('show');
          $(this).find('.events').addClass('show');
        });

        $('.events').mouseleave(function () {
          $(this).removeClass('show');
        });
      }
    }
  };

})(jQuery, Drupal);
;
(function($, Drupal) {
  Drupal.behaviors.customStickyVideo = {
    attach: function() {
      if ($(".page-node-type-video").length > 0) {
        
        var $window = $(window);
        var $videoHeader = $(".video-header");
        var $videoHeaderContent = $(".video-header-content");
        var $video;
        var videoHeight;

        if ($(".video-embed-field-responsive-video").length) {
          $video = $(".video-embed-field-responsive-video");
          videoHeight = $video.height();
        } else if ($("#captions-session-player").length) {
          $video = $("#captions-session-player");
          
        } else if ($(".video-embed-field-provider-simplecast").length) {
          $video = $(".video-embed-field-provider-simplecast");
        }
        else {
          return;
        }
       
        var $videoWrap = $(".video-wrapper-sticky-video");

        $(window).scroll(function(e) {
          if ($("#captions-session-player").length) {
            videoHeight = ($window.width() > 1080) ? 665 : $window.width() / 1.65;
          }

          var windowScrollTop = $window.scrollTop();
          var videoBottom = videoHeight + $videoWrap.offset().top;

          if ($window.width() > 768 && $window.height() > 600 && (windowScrollTop > videoBottom)) {
            $("#hero").css("padding-bottom", "100px");
            $videoWrap.height(videoHeight);
            $video.addClass("sticky-video");
            $videoHeader.addClass("sticky-video-header");
            $videoHeaderContent.css("display", "flex");
          } else {
            $("#hero").css("padding-bottom", "50px");
            $videoWrap.height("auto");
            $video.removeClass("sticky-video");
            $videoHeader.removeClass("sticky-video-header");
            $videoHeaderContent.hide();
          }
        });
      }
    }
  };
})(jQuery, Drupal);
;
/**
 * @file
 * chartbeat-foot.js
 *
 * This is used with https://chartbeat.com. This code goes into the footer of the site.
 */

var _sf_async_config = {uid: 65541, domain: 'cigionline.org', useCanonical: true};
(function () {
    function loadChartbeat() {
        window._sf_endpt = (new Date()).getTime();
        var e = document.createElement('script');
        e.setAttribute('language', 'javascript');
        e.setAttribute('type', 'text/javascript');
        e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
        document.body.appendChild(e);
    }
    var oldonload = window.onload;
    window.onload = (typeof window.onload !== 'function') ?
        loadChartbeat : function () {
            oldonload();
            loadChartbeat();
        };
})();
;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal, drupalSettings) {
  $(document).ready(function () {
    $.ajax({
      type: 'POST',
      cache: false,
      url: drupalSettings.statistics.url,
      data: drupalSettings.statistics.data
    });
  });
})(jQuery, Drupal, drupalSettings);;
!function(){"use strict";function e(n){return"undefined"==typeof this||Object.getPrototypeOf(this)!==e.prototype?new e(n):(O=this,O.version="3.4.0",O.tools=new E,O.isSupported()?(O.tools.extend(O.defaults,n||{}),O.defaults.container=t(O.defaults),O.store={elements:{},containers:[]},O.sequences={},O.history=[],O.uid=0,O.initialized=!1):"undefined"!=typeof console&&null!==console,O)}function t(e){if(e&&e.container){if("string"==typeof e.container)return window.document.documentElement.querySelector(e.container);if(O.tools.isNode(e.container))return e.container}return O.defaults.container}function n(e,t){return"string"==typeof e?Array.prototype.slice.call(t.querySelectorAll(e)):O.tools.isNode(e)?[e]:O.tools.isNodeList(e)?Array.prototype.slice.call(e):Array.isArray(e)?e.filter(O.tools.isNode):[]}function i(){return++O.uid}function o(e,t,n){t.container&&(t.container=n),e.config?e.config=O.tools.extendClone(e.config,t):e.config=O.tools.extendClone(O.defaults,t),"top"===e.config.origin||"bottom"===e.config.origin?e.config.axis="Y":e.config.axis="X"}function r(e){var t=window.getComputedStyle(e.domEl);e.styles||(e.styles={transition:{},transform:{},computed:{}},e.styles.inline=e.domEl.getAttribute("style")||"",e.styles.inline+="; visibility: visible; ",e.styles.computed.opacity=t.opacity,t.transition&&"all 0s ease 0s"!==t.transition?e.styles.computed.transition=t.transition+", ":e.styles.computed.transition=""),e.styles.transition.instant=s(e,0),e.styles.transition.delayed=s(e,e.config.delay),e.styles.transform.initial=" -webkit-transform:",e.styles.transform.target=" -webkit-transform:",a(e),e.styles.transform.initial+="transform:",e.styles.transform.target+="transform:",a(e)}function s(e,t){var n=e.config;return"-webkit-transition: "+e.styles.computed.transition+"-webkit-transform "+n.duration/1e3+"s "+n.easing+" "+t/1e3+"s, opacity "+n.duration/1e3+"s "+n.easing+" "+t/1e3+"s; transition: "+e.styles.computed.transition+"transform "+n.duration/1e3+"s "+n.easing+" "+t/1e3+"s, opacity "+n.duration/1e3+"s "+n.easing+" "+t/1e3+"s; "}function a(e){var t,n=e.config,i=e.styles.transform;t="top"===n.origin||"left"===n.origin?/^-/.test(n.distance)?n.distance.substr(1):"-"+n.distance:n.distance,parseInt(n.distance)&&(i.initial+=" translate"+n.axis+"("+t+")",i.target+=" translate"+n.axis+"(0)"),n.scale&&(i.initial+=" scale("+n.scale+")",i.target+=" scale(1)"),n.rotate.x&&(i.initial+=" rotateX("+n.rotate.x+"deg)",i.target+=" rotateX(0)"),n.rotate.y&&(i.initial+=" rotateY("+n.rotate.y+"deg)",i.target+=" rotateY(0)"),n.rotate.z&&(i.initial+=" rotateZ("+n.rotate.z+"deg)",i.target+=" rotateZ(0)"),i.initial+="; opacity: "+n.opacity+";",i.target+="; opacity: "+e.styles.computed.opacity+";"}function l(e){var t=e.config.container;t&&O.store.containers.indexOf(t)===-1&&O.store.containers.push(e.config.container),O.store.elements[e.id]=e}function c(e,t,n){var i={target:e,config:t,interval:n};O.history.push(i)}function f(){if(O.isSupported()){y();for(var e=0;e<O.store.containers.length;e++)O.store.containers[e].addEventListener("scroll",d),O.store.containers[e].addEventListener("resize",d);O.initialized||(window.addEventListener("scroll",d),window.addEventListener("resize",d),O.initialized=!0)}return O}function d(){A(y)}function u(){var e,t,n,i;O.tools.forOwn(O.sequences,function(o){i=O.sequences[o],e=!1;for(var r=0;r<i.elemIds.length;r++)n=i.elemIds[r],t=O.store.elements[n],q(t)&&!e&&(e=!0);i.active=e})}function y(){var e,t;u(),O.tools.forOwn(O.store.elements,function(n){t=O.store.elements[n],e=w(t),g(t)?(t.config.beforeReveal(t.domEl),e?t.domEl.setAttribute("style",t.styles.inline+t.styles.transform.target+t.styles.transition.delayed):t.domEl.setAttribute("style",t.styles.inline+t.styles.transform.target+t.styles.transition.instant),p("reveal",t,e),t.revealing=!0,t.seen=!0,t.sequence&&m(t,e)):v(t)&&(t.config.beforeReset(t.domEl),t.domEl.setAttribute("style",t.styles.inline+t.styles.transform.initial+t.styles.transition.instant),p("reset",t),t.revealing=!1)})}function m(e,t){var n=0,i=0,o=O.sequences[e.sequence.id];o.blocked=!0,t&&"onload"===e.config.useDelay&&(i=e.config.delay),e.sequence.timer&&(n=Math.abs(e.sequence.timer.started-new Date),window.clearTimeout(e.sequence.timer)),e.sequence.timer={started:new Date},e.sequence.timer.clock=window.setTimeout(function(){o.blocked=!1,e.sequence.timer=null,d()},Math.abs(o.interval)+i-n)}function p(e,t,n){var i=0,o=0,r="after";switch(e){case"reveal":o=t.config.duration,n&&(o+=t.config.delay),r+="Reveal";break;case"reset":o=t.config.duration,r+="Reset"}t.timer&&(i=Math.abs(t.timer.started-new Date),window.clearTimeout(t.timer.clock)),t.timer={started:new Date},t.timer.clock=window.setTimeout(function(){t.config[r](t.domEl),t.timer=null},o-i)}function g(e){if(e.sequence){var t=O.sequences[e.sequence.id];return t.active&&!t.blocked&&!e.revealing&&!e.disabled}return q(e)&&!e.revealing&&!e.disabled}function w(e){var t=e.config.useDelay;return"always"===t||"onload"===t&&!O.initialized||"once"===t&&!e.seen}function v(e){if(e.sequence){var t=O.sequences[e.sequence.id];return!t.active&&e.config.reset&&e.revealing&&!e.disabled}return!q(e)&&e.config.reset&&e.revealing&&!e.disabled}function b(e){return{width:e.clientWidth,height:e.clientHeight}}function h(e){if(e&&e!==window.document.documentElement){var t=x(e);return{x:e.scrollLeft+t.left,y:e.scrollTop+t.top}}return{x:window.pageXOffset,y:window.pageYOffset}}function x(e){var t=0,n=0,i=e.offsetHeight,o=e.offsetWidth;do isNaN(e.offsetTop)||(t+=e.offsetTop),isNaN(e.offsetLeft)||(n+=e.offsetLeft),e=e.offsetParent;while(e);return{top:t,left:n,height:i,width:o}}function q(e){function t(){var t=c+a*s,n=f+l*s,i=d-a*s,y=u-l*s,m=r.y+e.config.viewOffset.top,p=r.x+e.config.viewOffset.left,g=r.y-e.config.viewOffset.bottom+o.height,w=r.x-e.config.viewOffset.right+o.width;return t<g&&i>m&&n<w&&y>p}function n(){return"fixed"===window.getComputedStyle(e.domEl).position}var i=x(e.domEl),o=b(e.config.container),r=h(e.config.container),s=e.config.viewFactor,a=i.height,l=i.width,c=i.top,f=i.left,d=c+a,u=f+l;return t()||n()}function E(){}var O,A;e.prototype.defaults={origin:"bottom",distance:"20px",duration:500,delay:0,rotate:{x:0,y:0,z:0},opacity:0,scale:.9,easing:"cubic-bezier(0.6, 0.2, 0.1, 1)",container:window.document.documentElement,mobile:!0,reset:!1,useDelay:"always",viewFactor:.2,viewOffset:{top:0,right:0,bottom:0,left:0},beforeReveal:function(e){},beforeReset:function(e){},afterReveal:function(e){},afterReset:function(e){}},e.prototype.isSupported=function(){var e=document.documentElement.style;return"WebkitTransition"in e&&"WebkitTransform"in e||"transition"in e&&"transform"in e},e.prototype.reveal=function(e,s,a,d){var u,y,m,p,g,w;if(void 0!==s&&"number"==typeof s?(a=s,s={}):void 0!==s&&null!==s||(s={}),u=t(s),y=n(e,u),!y.length)return O;a&&"number"==typeof a&&(w=i(),g=O.sequences[w]={id:w,interval:a,elemIds:[],active:!1});for(var v=0;v<y.length;v++)p=y[v].getAttribute("data-sr-id"),p?m=O.store.elements[p]:(m={id:i(),domEl:y[v],seen:!1,revealing:!1},m.domEl.setAttribute("data-sr-id",m.id)),g&&(m.sequence={id:g.id,index:g.elemIds.length},g.elemIds.push(m.id)),o(m,s,u),r(m),l(m),O.tools.isMobile()&&!m.config.mobile||!O.isSupported()?(m.domEl.setAttribute("style",m.styles.inline),m.disabled=!0):m.revealing||m.domEl.setAttribute("style",m.styles.inline+m.styles.transform.initial);return!d&&O.isSupported()&&(c(e,s,a),O.initTimeout&&window.clearTimeout(O.initTimeout),O.initTimeout=window.setTimeout(f,0)),O},e.prototype.sync=function(){if(O.history.length&&O.isSupported()){for(var e=0;e<O.history.length;e++){var t=O.history[e];O.reveal(t.target,t.config,t.interval,!0)}f()}return O},E.prototype.isObject=function(e){return null!==e&&"object"==typeof e&&e.constructor===Object},E.prototype.isNode=function(e){return"object"==typeof window.Node?e instanceof window.Node:e&&"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName},E.prototype.isNodeList=function(e){var t=Object.prototype.toString.call(e),n=/^\[object (HTMLCollection|NodeList|Object)\]$/;return"object"==typeof window.NodeList?e instanceof window.NodeList:e&&"object"==typeof e&&n.test(t)&&"number"==typeof e.length&&(0===e.length||this.isNode(e[0]))},E.prototype.forOwn=function(e,t){if(!this.isObject(e))throw new TypeError('Expected "object", but received "'+typeof e+'".');for(var n in e)e.hasOwnProperty(n)&&t(n)},E.prototype.extend=function(e,t){return this.forOwn(t,function(n){this.isObject(t[n])?(e[n]&&this.isObject(e[n])||(e[n]={}),this.extend(e[n],t[n])):e[n]=t[n]}.bind(this)),e},E.prototype.extendClone=function(e,t){return this.extend(this.extend({},e),t)},E.prototype.isMobile=function(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)},A=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(e){window.setTimeout(e,1e3/60)},"function"==typeof define&&"object"==typeof define.amd&&define.amd?define(function(){return e}):"undefined"!=typeof module&&module.exports?module.exports=e:window.ScrollReveal=e}();;
(function ($, Drupal) {
    window.sr = ScrollReveal();
    sr.reveal('.paragraph--type--image img', {
        delay: 250,
        distance: '0',
        duration: 750,
        scale: 1,
    });
    sr.reveal('.paragraph--type--image-full-bleed img', {
        delay: 250,
        distance: '0',
        duration: 750,
        scale: 1,
    });
    sr.reveal('.paragraph--type--block-quote', {
        delay: 100,
        distance: '50px',
        duration: 750,
        origin: 'left',
        scale: 1,
    });
    sr.reveal('.paragraph--type--pull-quote-left', {
        delay: 100,
        distance: '50px',
        duration: 750,
        origin: 'left',
        scale: 1,
    });
    sr.reveal('.paragraph--type--pull-quote-right', {
        delay: 100,
        distance: '50px',
        duration: 750,
        origin: 'right',
        scale: 1,
    });
    sr.reveal('.paragraph--type--block-quote.image-right', {
        delay: 100,
        distance: '50px',
        duration: 750,
        origin: 'right',
        scale: 1,
    });
})(jQuery, Drupal);
;
!function(e,t){e("a[href*='#']:not([href='#'])").click(function(){let t=e(this.hash);if((t=t.length?t:e(`[name=${this.hash.slice(1)}]`)).length){let n=t.offset().top;return e(".platform-governance").length||(n-=80),e("html,body").animate({scrollTop:n},1e3),!1}})}(jQuery,Drupal);;
(function ($, Drupal) {

    var titleText = $('#typewriter-out').text();
    var titleHeight = 0;
    var speed = 0;
    var toggleArray = [$('.subtitle'), $('.arrow-animate'), $('.author-reveal')];
    var showLess = $('.show-less');
    var showMore = $('.show-more');
    var moreText = $('.more-text');

    $(window).on('load', function () {
        // TODO: Fix animation for print
        // moreText.toggle();
        //
        // //Typewriter effect
        // if ($('.series-title').height()) {
        //     titleHeight = $('.series-title').height();
        //     $('#typewriter-out').text("");
        //     $('.series-title').height(titleHeight);
        // }
        // else if ($('.article-title').height()) {
        //     titleHeight = $('.article-title').height();
        //     $('#typewriter-out').text("");
        //     $('.article-title').height(titleHeight);
        // }
        //
        // $('#typewriter-out').text("");
        //
        // speed = (-(20 / 43) * titleText.length) + 60;
        //
        // function typeWriter(str, i) {
        //     var element = $('#typewriter-out');
        //     element.css({ 'opacity': '1.0' });
        //     if (i <= str.length) {
        //         element.text(element.text() + str.charAt(i));
        //         i++;
        //         setTimeout(function () { typeWriter(str, i); }, speed);
        //     }
        //     else {
        //         toggleArray.forEach(function (item) {
        //             item.fadeTo("slow", 1.0);
        //         })
        //     }
        // }
        //
        // typeWriter(titleText, 0);
    });

    // Refreshing height of typewriter titles on resize
    $(window).resize(function () {
        if ($('.series-title').height()) {
            $('.series-title').height($('#typewriter-out').height());
        }
        else if ($('.article-title').height()) {
            $('.article-title').height($('#typewriter-out').height());
        }
    });

    // Hiding landing page title on scroll
    $(window).scroll(function () {
        var percent = .25;
        var documentPercent = $(document).height() * percent;
        if ($(window).scrollTop() >= documentPercent) {
            $('.content.cyber-series').fadeOut('slow');
        }
        if ($(window).scrollTop() < documentPercent) {
            $('.content.cyber-series').fadeIn('slow');
            // $('.series-title').height(titleHeight);
        }
    });


    // Description accordion
    showMore.click(function () {
        moreText.toggle();
        showMore.toggle();
    });

    showLess.click(function () {
        moreText.toggle();
        showMore.toggle();
    });

    // Progressive image loading
    if ($('.progressive-image').css('background-image') != 'none') {
        $('.preload-image').ready(function () {
            $('.cyber-background').fadeTo('slow', 1.0, function () {
                $('.progressive-image').fadeTo('slow', 0.0);
            });
        });
    }
    else {
        $('.preload-image').ready(function () {
            $('.cyber-background').fadeTo('slow', 1.0);
        });
    }

})(jQuery, Drupal);
;
(function ($) {
    Drupal.behaviors.cookieBanner = {
        attach: function () {
			$('#cookie-button').click(function () {
				setTimeout(function(){
					$('#cookie-banner').fadeOut();
				}, 1500);
			});
        }
    };
})(jQuery);;
/*!
 * jQuery Form Plugin
 * version: 4.2.2
 * Requires jQuery v1.7.2 or later
 * Project repository: https://github.com/jquery-form/form

 * Copyright 2017 Kevin Morris
 * Copyright 2006 M. Alsup

 * Dual licensed under the LGPL-2.1+ or MIT licenses
 * https://github.com/jquery-form/form#license

 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 */
!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof module&&module.exports?module.exports=function(t,r){return void 0===r&&(r="undefined"!=typeof window?require("jquery"):require("jquery")(t)),e(r),r}:e(jQuery)}(function(e){"use strict";function t(t){var r=t.data;t.isDefaultPrevented()||(t.preventDefault(),e(t.target).closest("form").ajaxSubmit(r))}function r(t){var r=t.target,a=e(r);if(!a.is("[type=submit],[type=image]")){var n=a.closest("[type=submit]");if(0===n.length)return;r=n[0]}var i=r.form;if(i.clk=r,"image"===r.type)if(void 0!==t.offsetX)i.clk_x=t.offsetX,i.clk_y=t.offsetY;else if("function"==typeof e.fn.offset){var o=a.offset();i.clk_x=t.pageX-o.left,i.clk_y=t.pageY-o.top}else i.clk_x=t.pageX-r.offsetLeft,i.clk_y=t.pageY-r.offsetTop;setTimeout(function(){i.clk=i.clk_x=i.clk_y=null},100)}function a(){if(e.fn.ajaxSubmit.debug){var t="[jquery.form] "+Array.prototype.join.call(arguments,"");window.console&&window.console.log?window.console.log(t):window.opera&&window.opera.postError&&window.opera.postError(t)}}var n=/\r?\n/g,i={};i.fileapi=void 0!==e('<input type="file">').get(0).files,i.formdata=void 0!==window.FormData;var o=!!e.fn.prop;e.fn.attr2=function(){if(!o)return this.attr.apply(this,arguments);var e=this.prop.apply(this,arguments);return e&&e.jquery||"string"==typeof e?e:this.attr.apply(this,arguments)},e.fn.ajaxSubmit=function(t,r,n,s){function u(r){var a,n,i=e.param(r,t.traditional).split("&"),o=i.length,s=[];for(a=0;a<o;a++)i[a]=i[a].replace(/\+/g," "),n=i[a].split("="),s.push([decodeURIComponent(n[0]),decodeURIComponent(n[1])]);return s}function c(r){function n(e){var t=null;try{e.contentWindow&&(t=e.contentWindow.document)}catch(e){a("cannot get iframe.contentWindow document: "+e)}if(t)return t;try{t=e.contentDocument?e.contentDocument:e.document}catch(r){a("cannot get iframe.contentDocument: "+r),t=e.document}return t}function i(){function t(){try{var e=n(v).readyState;a("state = "+e),e&&"uninitialized"===e.toLowerCase()&&setTimeout(t,50)}catch(e){a("Server abort: ",e," (",e.name,")"),s(L),j&&clearTimeout(j),j=void 0}}var r=p.attr2("target"),i=p.attr2("action"),o=p.attr("enctype")||p.attr("encoding")||"multipart/form-data";w.setAttribute("target",m),l&&!/post/i.test(l)||w.setAttribute("method","POST"),i!==f.url&&w.setAttribute("action",f.url),f.skipEncodingOverride||l&&!/post/i.test(l)||p.attr({encoding:"multipart/form-data",enctype:"multipart/form-data"}),f.timeout&&(j=setTimeout(function(){T=!0,s(A)},f.timeout));var u=[];try{if(f.extraData)for(var c in f.extraData)f.extraData.hasOwnProperty(c)&&(e.isPlainObject(f.extraData[c])&&f.extraData[c].hasOwnProperty("name")&&f.extraData[c].hasOwnProperty("value")?u.push(e('<input type="hidden" name="'+f.extraData[c].name+'">',k).val(f.extraData[c].value).appendTo(w)[0]):u.push(e('<input type="hidden" name="'+c+'">',k).val(f.extraData[c]).appendTo(w)[0]));f.iframeTarget||h.appendTo(D),v.attachEvent?v.attachEvent("onload",s):v.addEventListener("load",s,!1),setTimeout(t,15);try{w.submit()}catch(e){document.createElement("form").submit.apply(w)}}finally{w.setAttribute("action",i),w.setAttribute("enctype",o),r?w.setAttribute("target",r):p.removeAttr("target"),e(u).remove()}}function s(t){if(!x.aborted&&!X){if((O=n(v))||(a("cannot access response document"),t=L),t===A&&x)return x.abort("timeout"),void S.reject(x,"timeout");if(t===L&&x)return x.abort("server abort"),void S.reject(x,"error","server abort");if(O&&O.location.href!==f.iframeSrc||T){v.detachEvent?v.detachEvent("onload",s):v.removeEventListener("load",s,!1);var r,i="success";try{if(T)throw"timeout";var o="xml"===f.dataType||O.XMLDocument||e.isXMLDoc(O);if(a("isXml="+o),!o&&window.opera&&(null===O.body||!O.body.innerHTML)&&--C)return a("requeing onLoad callback, DOM not available"),void setTimeout(s,250);var u=O.body?O.body:O.documentElement;x.responseText=u?u.innerHTML:null,x.responseXML=O.XMLDocument?O.XMLDocument:O,o&&(f.dataType="xml"),x.getResponseHeader=function(e){return{"content-type":f.dataType}[e.toLowerCase()]},u&&(x.status=Number(u.getAttribute("status"))||x.status,x.statusText=u.getAttribute("statusText")||x.statusText);var c=(f.dataType||"").toLowerCase(),l=/(json|script|text)/.test(c);if(l||f.textarea){var p=O.getElementsByTagName("textarea")[0];if(p)x.responseText=p.value,x.status=Number(p.getAttribute("status"))||x.status,x.statusText=p.getAttribute("statusText")||x.statusText;else if(l){var m=O.getElementsByTagName("pre")[0],g=O.getElementsByTagName("body")[0];m?x.responseText=m.textContent?m.textContent:m.innerText:g&&(x.responseText=g.textContent?g.textContent:g.innerText)}}else"xml"===c&&!x.responseXML&&x.responseText&&(x.responseXML=q(x.responseText));try{M=N(x,c,f)}catch(e){i="parsererror",x.error=r=e||i}}catch(e){a("error caught: ",e),i="error",x.error=r=e||i}x.aborted&&(a("upload aborted"),i=null),x.status&&(i=x.status>=200&&x.status<300||304===x.status?"success":"error"),"success"===i?(f.success&&f.success.call(f.context,M,"success",x),S.resolve(x.responseText,"success",x),d&&e.event.trigger("ajaxSuccess",[x,f])):i&&(void 0===r&&(r=x.statusText),f.error&&f.error.call(f.context,x,i,r),S.reject(x,"error",r),d&&e.event.trigger("ajaxError",[x,f,r])),d&&e.event.trigger("ajaxComplete",[x,f]),d&&!--e.active&&e.event.trigger("ajaxStop"),f.complete&&f.complete.call(f.context,x,i),X=!0,f.timeout&&clearTimeout(j),setTimeout(function(){f.iframeTarget?h.attr("src",f.iframeSrc):h.remove(),x.responseXML=null},100)}}}var u,c,f,d,m,h,v,x,y,b,T,j,w=p[0],S=e.Deferred();if(S.abort=function(e){x.abort(e)},r)for(c=0;c<g.length;c++)u=e(g[c]),o?u.prop("disabled",!1):u.removeAttr("disabled");(f=e.extend(!0,{},e.ajaxSettings,t)).context=f.context||f,m="jqFormIO"+(new Date).getTime();var k=w.ownerDocument,D=p.closest("body");if(f.iframeTarget?(b=(h=e(f.iframeTarget,k)).attr2("name"))?m=b:h.attr2("name",m):(h=e('<iframe name="'+m+'" src="'+f.iframeSrc+'" />',k)).css({position:"absolute",top:"-1000px",left:"-1000px"}),v=h[0],x={aborted:0,responseText:null,responseXML:null,status:0,statusText:"n/a",getAllResponseHeaders:function(){},getResponseHeader:function(){},setRequestHeader:function(){},abort:function(t){var r="timeout"===t?"timeout":"aborted";a("aborting upload... "+r),this.aborted=1;try{v.contentWindow.document.execCommand&&v.contentWindow.document.execCommand("Stop")}catch(e){}h.attr("src",f.iframeSrc),x.error=r,f.error&&f.error.call(f.context,x,r,t),d&&e.event.trigger("ajaxError",[x,f,r]),f.complete&&f.complete.call(f.context,x,r)}},(d=f.global)&&0==e.active++&&e.event.trigger("ajaxStart"),d&&e.event.trigger("ajaxSend",[x,f]),f.beforeSend&&!1===f.beforeSend.call(f.context,x,f))return f.global&&e.active--,S.reject(),S;if(x.aborted)return S.reject(),S;(y=w.clk)&&(b=y.name)&&!y.disabled&&(f.extraData=f.extraData||{},f.extraData[b]=y.value,"image"===y.type&&(f.extraData[b+".x"]=w.clk_x,f.extraData[b+".y"]=w.clk_y));var A=1,L=2,F=e("meta[name=csrf-token]").attr("content"),E=e("meta[name=csrf-param]").attr("content");E&&F&&(f.extraData=f.extraData||{},f.extraData[E]=F),f.forceSync?i():setTimeout(i,10);var M,O,X,C=50,q=e.parseXML||function(e,t){return window.ActiveXObject?((t=new ActiveXObject("Microsoft.XMLDOM")).async="false",t.loadXML(e)):t=(new DOMParser).parseFromString(e,"text/xml"),t&&t.documentElement&&"parsererror"!==t.documentElement.nodeName?t:null},_=e.parseJSON||function(e){return window.eval("("+e+")")},N=function(t,r,a){var n=t.getResponseHeader("content-type")||"",i=("xml"===r||!r)&&n.indexOf("xml")>=0,o=i?t.responseXML:t.responseText;return i&&"parsererror"===o.documentElement.nodeName&&e.error&&e.error("parsererror"),a&&a.dataFilter&&(o=a.dataFilter(o,r)),"string"==typeof o&&(("json"===r||!r)&&n.indexOf("json")>=0?o=_(o):("script"===r||!r)&&n.indexOf("javascript")>=0&&e.globalEval(o)),o};return S}if(!this.length)return a("ajaxSubmit: skipping submit process - no element selected"),this;var l,f,d,p=this;"function"==typeof t?t={success:t}:"string"==typeof t||!1===t&&arguments.length>0?(t={url:t,data:r,dataType:n},"function"==typeof s&&(t.success=s)):void 0===t&&(t={}),l=t.method||t.type||this.attr2("method"),(d=(d="string"==typeof(f=t.url||this.attr2("action"))?e.trim(f):"")||window.location.href||"")&&(d=(d.match(/^([^#]+)/)||[])[1]),t=e.extend(!0,{url:d,success:e.ajaxSettings.success,type:l||e.ajaxSettings.type,iframeSrc:/^https/i.test(window.location.href||"")?"javascript:false":"about:blank"},t);var m={};if(this.trigger("form-pre-serialize",[this,t,m]),m.veto)return a("ajaxSubmit: submit vetoed via form-pre-serialize trigger"),this;if(t.beforeSerialize&&!1===t.beforeSerialize(this,t))return a("ajaxSubmit: submit aborted via beforeSerialize callback"),this;var h=t.traditional;void 0===h&&(h=e.ajaxSettings.traditional);var v,g=[],x=this.formToArray(t.semantic,g,t.filtering);if(t.data){var y=e.isFunction(t.data)?t.data(x):t.data;t.extraData=y,v=e.param(y,h)}if(t.beforeSubmit&&!1===t.beforeSubmit(x,this,t))return a("ajaxSubmit: submit aborted via beforeSubmit callback"),this;if(this.trigger("form-submit-validate",[x,this,t,m]),m.veto)return a("ajaxSubmit: submit vetoed via form-submit-validate trigger"),this;var b=e.param(x,h);v&&(b=b?b+"&"+v:v),"GET"===t.type.toUpperCase()?(t.url+=(t.url.indexOf("?")>=0?"&":"?")+b,t.data=null):t.data=b;var T=[];if(t.resetForm&&T.push(function(){p.resetForm()}),t.clearForm&&T.push(function(){p.clearForm(t.includeHidden)}),!t.dataType&&t.target){var j=t.success||function(){};T.push(function(r,a,n){var i=arguments,o=t.replaceTarget?"replaceWith":"html";e(t.target)[o](r).each(function(){j.apply(this,i)})})}else t.success&&(e.isArray(t.success)?e.merge(T,t.success):T.push(t.success));if(t.success=function(e,r,a){for(var n=t.context||this,i=0,o=T.length;i<o;i++)T[i].apply(n,[e,r,a||p,p])},t.error){var w=t.error;t.error=function(e,r,a){var n=t.context||this;w.apply(n,[e,r,a,p])}}if(t.complete){var S=t.complete;t.complete=function(e,r){var a=t.context||this;S.apply(a,[e,r,p])}}var k=e("input[type=file]:enabled",this).filter(function(){return""!==e(this).val()}).length>0,D="multipart/form-data",A=p.attr("enctype")===D||p.attr("encoding")===D,L=i.fileapi&&i.formdata;a("fileAPI :"+L);var F,E=(k||A)&&!L;!1!==t.iframe&&(t.iframe||E)?t.closeKeepAlive?e.get(t.closeKeepAlive,function(){F=c(x)}):F=c(x):F=(k||A)&&L?function(r){for(var a=new FormData,n=0;n<r.length;n++)a.append(r[n].name,r[n].value);if(t.extraData){var i=u(t.extraData);for(n=0;n<i.length;n++)i[n]&&a.append(i[n][0],i[n][1])}t.data=null;var o=e.extend(!0,{},e.ajaxSettings,t,{contentType:!1,processData:!1,cache:!1,type:l||"POST"});t.uploadProgress&&(o.xhr=function(){var r=e.ajaxSettings.xhr();return r.upload&&r.upload.addEventListener("progress",function(e){var r=0,a=e.loaded||e.position,n=e.total;e.lengthComputable&&(r=Math.ceil(a/n*100)),t.uploadProgress(e,a,n,r)},!1),r}),o.data=null;var s=o.beforeSend;return o.beforeSend=function(e,r){t.formData?r.data=t.formData:r.data=a,s&&s.call(this,e,r)},e.ajax(o)}(x):e.ajax(t),p.removeData("jqxhr").data("jqxhr",F);for(var M=0;M<g.length;M++)g[M]=null;return this.trigger("form-submit-notify",[this,t]),this},e.fn.ajaxForm=function(n,i,o,s){if(("string"==typeof n||!1===n&&arguments.length>0)&&(n={url:n,data:i,dataType:o},"function"==typeof s&&(n.success=s)),n=n||{},n.delegation=n.delegation&&e.isFunction(e.fn.on),!n.delegation&&0===this.length){var u={s:this.selector,c:this.context};return!e.isReady&&u.s?(a("DOM not ready, queuing ajaxForm"),e(function(){e(u.s,u.c).ajaxForm(n)}),this):(a("terminating; zero elements found by selector"+(e.isReady?"":" (DOM not ready)")),this)}return n.delegation?(e(document).off("submit.form-plugin",this.selector,t).off("click.form-plugin",this.selector,r).on("submit.form-plugin",this.selector,n,t).on("click.form-plugin",this.selector,n,r),this):this.ajaxFormUnbind().on("submit.form-plugin",n,t).on("click.form-plugin",n,r)},e.fn.ajaxFormUnbind=function(){return this.off("submit.form-plugin click.form-plugin")},e.fn.formToArray=function(t,r,a){var n=[];if(0===this.length)return n;var o,s=this[0],u=this.attr("id"),c=t||void 0===s.elements?s.getElementsByTagName("*"):s.elements;if(c&&(c=e.makeArray(c)),u&&(t||/(Edge|Trident)\//.test(navigator.userAgent))&&(o=e(':input[form="'+u+'"]').get()).length&&(c=(c||[]).concat(o)),!c||!c.length)return n;e.isFunction(a)&&(c=e.map(c,a));var l,f,d,p,m,h,v;for(l=0,h=c.length;l<h;l++)if(m=c[l],(d=m.name)&&!m.disabled)if(t&&s.clk&&"image"===m.type)s.clk===m&&(n.push({name:d,value:e(m).val(),type:m.type}),n.push({name:d+".x",value:s.clk_x},{name:d+".y",value:s.clk_y}));else if((p=e.fieldValue(m,!0))&&p.constructor===Array)for(r&&r.push(m),f=0,v=p.length;f<v;f++)n.push({name:d,value:p[f]});else if(i.fileapi&&"file"===m.type){r&&r.push(m);var g=m.files;if(g.length)for(f=0;f<g.length;f++)n.push({name:d,value:g[f],type:m.type});else n.push({name:d,value:"",type:m.type})}else null!==p&&void 0!==p&&(r&&r.push(m),n.push({name:d,value:p,type:m.type,required:m.required}));if(!t&&s.clk){var x=e(s.clk),y=x[0];(d=y.name)&&!y.disabled&&"image"===y.type&&(n.push({name:d,value:x.val()}),n.push({name:d+".x",value:s.clk_x},{name:d+".y",value:s.clk_y}))}return n},e.fn.formSerialize=function(t){return e.param(this.formToArray(t))},e.fn.fieldSerialize=function(t){var r=[];return this.each(function(){var a=this.name;if(a){var n=e.fieldValue(this,t);if(n&&n.constructor===Array)for(var i=0,o=n.length;i<o;i++)r.push({name:a,value:n[i]});else null!==n&&void 0!==n&&r.push({name:this.name,value:n})}}),e.param(r)},e.fn.fieldValue=function(t){for(var r=[],a=0,n=this.length;a<n;a++){var i=this[a],o=e.fieldValue(i,t);null===o||void 0===o||o.constructor===Array&&!o.length||(o.constructor===Array?e.merge(r,o):r.push(o))}return r},e.fieldValue=function(t,r){var a=t.name,i=t.type,o=t.tagName.toLowerCase();if(void 0===r&&(r=!0),r&&(!a||t.disabled||"reset"===i||"button"===i||("checkbox"===i||"radio"===i)&&!t.checked||("submit"===i||"image"===i)&&t.form&&t.form.clk!==t||"select"===o&&-1===t.selectedIndex))return null;if("select"===o){var s=t.selectedIndex;if(s<0)return null;for(var u=[],c=t.options,l="select-one"===i,f=l?s+1:c.length,d=l?s:0;d<f;d++){var p=c[d];if(p.selected&&!p.disabled){var m=p.value;if(m||(m=p.attributes&&p.attributes.value&&!p.attributes.value.specified?p.text:p.value),l)return m;u.push(m)}}return u}return e(t).val().replace(n,"\r\n")},e.fn.clearForm=function(t){return this.each(function(){e("input,select,textarea",this).clearFields(t)})},e.fn.clearFields=e.fn.clearInputs=function(t){var r=/^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i;return this.each(function(){var a=this.type,n=this.tagName.toLowerCase();r.test(a)||"textarea"===n?this.value="":"checkbox"===a||"radio"===a?this.checked=!1:"select"===n?this.selectedIndex=-1:"file"===a?/MSIE/.test(navigator.userAgent)?e(this).replaceWith(e(this).clone(!0)):e(this).val(""):t&&(!0===t&&/hidden/.test(a)||"string"==typeof t&&e(this).is(t))&&(this.value="")})},e.fn.resetForm=function(){return this.each(function(){var t=e(this),r=this.tagName.toLowerCase();switch(r){case"input":this.checked=this.defaultChecked;case"textarea":return this.value=this.defaultValue,!0;case"option":case"optgroup":var a=t.parents("select");return a.length&&a[0].multiple?"option"===r?this.selected=this.defaultSelected:t.find("option").resetForm():a.resetForm(),!0;case"select":return t.find("option").each(function(e){if(this.selected=this.defaultSelected,this.defaultSelected&&!t[0].multiple)return t[0].selectedIndex=e,!1}),!0;case"label":var n=e(t.attr("for")),i=t.find("input,select,textarea");return n[0]&&i.unshift(n[0]),i.resetForm(),!0;case"form":return("function"==typeof this.reset||"object"==typeof this.reset&&!this.reset.nodeType)&&this.reset(),!0;default:return t.find("form,input,label,select,textarea").resetForm(),!0}})},e.fn.enable=function(e){return void 0===e&&(e=!0),this.each(function(){this.disabled=!e})},e.fn.selected=function(t){return void 0===t&&(t=!0),this.each(function(){var r=this.type;if("checkbox"===r||"radio"===r)this.checked=t;else if("option"===this.tagName.toLowerCase()){var a=e(this).parent("select");t&&a[0]&&"select-one"===a[0].type&&a.find("option").selected(!1),this.selected=t}})},e.fn.ajaxSubmit.debug=!1});

;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal, drupalSettings) {
  Drupal.Views = {};

  Drupal.Views.parseQueryString = function (query) {
    var args = {};
    var pos = query.indexOf('?');
    if (pos !== -1) {
      query = query.substring(pos + 1);
    }
    var pair = void 0;
    var pairs = query.split('&');
    for (var i = 0; i < pairs.length; i++) {
      pair = pairs[i].split('=');

      if (pair[0] !== 'q' && pair[1]) {
        args[decodeURIComponent(pair[0].replace(/\+/g, ' '))] = decodeURIComponent(pair[1].replace(/\+/g, ' '));
      }
    }
    return args;
  };

  Drupal.Views.parseViewArgs = function (href, viewPath) {
    var returnObj = {};
    var path = Drupal.Views.getPath(href);

    var viewHref = Drupal.url(viewPath).substring(drupalSettings.path.baseUrl.length);

    if (viewHref && path.substring(0, viewHref.length + 1) === viewHref + '/') {
      returnObj.view_args = decodeURIComponent(path.substring(viewHref.length + 1, path.length));
      returnObj.view_path = path;
    }
    return returnObj;
  };

  Drupal.Views.pathPortion = function (href) {
    var protocol = window.location.protocol;
    if (href.substring(0, protocol.length) === protocol) {
      href = href.substring(href.indexOf('/', protocol.length + 2));
    }
    return href;
  };

  Drupal.Views.getPath = function (href) {
    href = Drupal.Views.pathPortion(href);
    href = href.substring(drupalSettings.path.baseUrl.length, href.length);

    if (href.substring(0, 3) === '?q=') {
      href = href.substring(3, href.length);
    }
    var chars = ['#', '?', '&'];
    for (var i = 0; i < chars.length; i++) {
      if (href.indexOf(chars[i]) > -1) {
        href = href.substr(0, href.indexOf(chars[i]));
      }
    }
    return href;
  };
})(jQuery, Drupal, drupalSettings);;
/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal, drupalSettings) {
  Drupal.behaviors.ViewsAjaxView = {};
  Drupal.behaviors.ViewsAjaxView.attach = function (context, settings) {
    if (settings && settings.views && settings.views.ajaxViews) {
      var ajaxViews = settings.views.ajaxViews;

      Object.keys(ajaxViews || {}).forEach(function (i) {
        Drupal.views.instances[i] = new Drupal.views.ajaxView(ajaxViews[i]);
      });
    }
  };
  Drupal.behaviors.ViewsAjaxView.detach = function (context, settings, trigger) {
    if (trigger === 'unload') {
      if (settings && settings.views && settings.views.ajaxViews) {
        var ajaxViews = settings.views.ajaxViews;

        Object.keys(ajaxViews || {}).forEach(function (i) {
          var selector = '.js-view-dom-id-' + ajaxViews[i].view_dom_id;
          if ($(selector, context).length) {
            delete Drupal.views.instances[i];
            delete settings.views.ajaxViews[i];
          }
        });
      }
    }
  };

  Drupal.views = {};

  Drupal.views.instances = {};

  Drupal.views.ajaxView = function (settings) {
    var selector = '.js-view-dom-id-' + settings.view_dom_id;
    this.$view = $(selector);

    var ajaxPath = drupalSettings.views.ajax_path;

    if (ajaxPath.constructor.toString().indexOf('Array') !== -1) {
      ajaxPath = ajaxPath[0];
    }

    var queryString = window.location.search || '';
    if (queryString !== '') {
      queryString = queryString.slice(1).replace(/q=[^&]+&?|&?render=[^&]+/, '');
      if (queryString !== '') {
        queryString = (/\?/.test(ajaxPath) ? '&' : '?') + queryString;
      }
    }

    this.element_settings = {
      url: ajaxPath + queryString,
      submit: settings,
      setClick: true,
      event: 'click',
      selector: selector,
      progress: { type: 'fullscreen' }
    };

    this.settings = settings;

    this.$exposed_form = $('form#views-exposed-form-' + settings.view_name.replace(/_/g, '-') + '-' + settings.view_display_id.replace(/_/g, '-'));
    this.$exposed_form.once('exposed-form').each($.proxy(this.attachExposedFormAjax, this));

    this.$view.filter($.proxy(this.filterNestedViews, this)).once('ajax-pager').each($.proxy(this.attachPagerAjax, this));

    var selfSettings = $.extend({}, this.element_settings, {
      event: 'RefreshView',
      base: this.selector,
      element: this.$view.get(0)
    });
    this.refreshViewAjax = Drupal.ajax(selfSettings);
  };

  Drupal.views.ajaxView.prototype.attachExposedFormAjax = function () {
    var that = this;
    this.exposedFormAjax = [];

    $('input[type=submit], input[type=image]', this.$exposed_form).not('[data-drupal-selector=edit-reset]').each(function (index) {
      var selfSettings = $.extend({}, that.element_settings, {
        base: $(this).attr('id'),
        element: this
      });
      that.exposedFormAjax[index] = Drupal.ajax(selfSettings);
    });
  };

  Drupal.views.ajaxView.prototype.filterNestedViews = function () {
    return !this.$view.parents('.view').length;
  };

  Drupal.views.ajaxView.prototype.attachPagerAjax = function () {
    this.$view.find('ul.js-pager__items > li > a, th.views-field a, .attachment .views-summary a').each($.proxy(this.attachPagerLinkAjax, this));
  };

  Drupal.views.ajaxView.prototype.attachPagerLinkAjax = function (id, link) {
    var $link = $(link);
    var viewData = {};
    var href = $link.attr('href');

    $.extend(viewData, this.settings, Drupal.Views.parseQueryString(href), Drupal.Views.parseViewArgs(href, this.settings.view_base_path));

    var selfSettings = $.extend({}, this.element_settings, {
      submit: viewData,
      base: false,
      element: link
    });
    this.pagerAjax = Drupal.ajax(selfSettings);
  };

  Drupal.AjaxCommands.prototype.viewsScrollTop = function (ajax, response) {
    var offset = $(response.selector).offset();

    var scrollTarget = response.selector;
    while ($(scrollTarget).scrollTop() === 0 && $(scrollTarget).parent()) {
      scrollTarget = $(scrollTarget).parent();
    }

    if (offset.top - 10 < $(scrollTarget).scrollTop()) {
      $(scrollTarget).animate({ scrollTop: offset.top - 10 }, 500);
    }
  };
})(jQuery, Drupal, drupalSettings);;
